apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mysite.fullname" . }}
  labels:
    {{- include "mysite.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mysite.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mysite.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ include "mysite.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP

          # Health checks
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3

          # Optional resource limits (tune later if needed)
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          # Working directory and volume mount (if static files)
          volumeMounts:
            - name: app-content
              mountPath: /var/www/html

      # Define volume for app files (optional)
      volumes:
        - name: app-content
          emptyDir: {}
